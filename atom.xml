<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://caesaryangs.github.io</id>
    <title>Stories</title>
    <updated>2021-05-09T11:01:10.343Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://caesaryangs.github.io"/>
    <link rel="self" href="https://caesaryangs.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://caesaryangs.github.io/images/avatar.png</logo>
    <icon>https://caesaryangs.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Stories</rights>
    <entry>
        <title type="html"><![CDATA[数据库原理课程笔记]]></title>
        <id>https://caesaryangs.github.io/post/shu-ju-ku-yuan-li-ke-cheng-bi-ji/</id>
        <link href="https://caesaryangs.github.io/post/shu-ju-ku-yuan-li-ke-cheng-bi-ji/">
        </link>
        <updated>2021-05-09T10:28:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="关于数据库的进阶学习笔记">关于数据库的进阶学习笔记</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[计算机组成原理课程笔记]]></title>
        <id>https://caesaryangs.github.io/post/ji-suan-ji-zu-cheng-yuan-li-ke-cheng-bi-ji/</id>
        <link href="https://caesaryangs.github.io/post/ji-suan-ji-zu-cheng-yuan-li-ke-cheng-bi-ji/">
        </link>
        <updated>2021-03-17T02:04:50.000Z</updated>
        <summary type="html"><![CDATA[<p>--持续更新中--🈶</p>
]]></summary>
        <content type="html"><![CDATA[<p>--持续更新中--🈶</p>
<!-- more -->
<h2 id="绪论">绪论</h2>
<ul>
<li><strong>课程概览</strong>
<ul>
<li>计算机+组成+原理</li>
<li>基本部件的结构和组织方式</li>
<li>基本运算的操作原理</li>
<li>基本部件和单元的设计思想</li>
<li>难点：
<ul>
<li>存储器</li>
<li>计算机运算方法</li>
<li>指令系统</li>
<li>CPU</li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- more -->
<h2 id="计算机系统概论">计算机系统概论</h2>
<!-- more -->
<h3 id="计算机系统简介">计算机系统简介</h3>
<ul>
<li>
<p>软硬件概念</p>
<ul>
<li>软件：系统软件+应用软件</li>
<li>考点：系统软件or应用软件</li>
</ul>
</li>
<li>
<p>框图</p>
<ul>
<li>基于此框图进行设计构造</li>
</ul>
</li>
<li>
<p>计算机系统层次结构</p>
<ul>
<li>高级语言-&gt;汇编语言-&gt;<strong>操作系统</strong>-&gt;机器语言-&gt;微指令系统</li>
</ul>
</li>
</ul>
<!-- more -->
<h3 id="计算机基本组成">计算机基本组成</h3>
<ul>
<li>
<p><strong>冯诺依曼计算机特点</strong></p>
<ul>
<li>计算机由五大部件组成
<ul>
<li>输入 输出 存储器 运算器 控制器</li>
</ul>
</li>
<li>指令和数据以同等地位存于储存器 可按地址寻访</li>
<li>指令和数据用二进制表示</li>
<li>指令由操作码和地址码组成</li>
<li>存储程序</li>
<li>以运算器为中心</li>
</ul>
</li>
<li>
<p>计算机硬件框图</p>
<ul>
<li>以储存器为中心的硬件框图</li>
<li>存储墙</li>
</ul>
</li>
<li>
<p>现代计算机硬件框图</p>
<ul>
<li>CPU
<ul>
<li><strong>运算器 ALU</strong></li>
<li><strong>控制器 CU</strong></li>
</ul>
</li>
<li><strong>存储器</strong>
<ul>
<li>主存</li>
<li>辅存</li>
</ul>
</li>
<li><strong>输入设备</strong></li>
<li><strong>输出设备</strong></li>
</ul>
</li>
</ul>
<!-- more -->
<h3 id="计算机工作步骤">计算机工作步骤</h3>
<ul>
<li>指令格式
<ul>
<li>操作码+地址码</li>
</ul>
</li>
<li>寄存器</li>
<li>运算器基本组成及操作过程</li>
</ul>
<!-- more -->
<h2 id="总线">总线</h2>
<!-- more -->
<h3 id="总线基本概念">总线基本概念</h3>
<!-- more -->
<h3 id="总线的分类">总线的分类</h3>
<!-- more -->
<h3 id="总线特性及性能指标">总线特性及性能指标</h3>
<!-- more -->
<h3 id="总线结构">总线结构</h3>
<!-- more -->
<h3 id="总线控制">总线控制</h3>
<!-- more -->
<h3 id="总线通信控制">总线通信控制</h3>
<!-- more -->
<h2 id="计算机运算方法6">计算机运算方法（6）</h2>
<!-- more -->
<h3 id="61-无符号数和有符号数">6.1 无符号数和有符号数</h3>
<ul>
<li>6.1.1无符号数#[[第六章 计算机运算方法]]
<ul>
<li>寄存器的位数 放多少个0/1</li>
<li>反应无符号数的表示范围</li>
</ul>
</li>
<li>6.1.2有符号数#[[第六章 计算机运算方法]]
<ul>
<li>机器数与真值
<ul>
<li>真值：带符号的数
<ul>
<li>真值表示法</li>
</ul>
</li>
<li>机器数：符号数字化的数</li>
</ul>
</li>
</ul>
</li>
<li>6.1.3原码表示法#[[第六章 计算机运算方法]]#[[计算机码]]
<ul>
<li>定义：第一位表示符号 后面表示数</li>
<li><strong>注意小数的表示</strong> 第一位表示符号</li>
<li>补充位数到寄存器的位数</li>
</ul>
</li>
<li>&quot;6.1.4补码表示法#[[第六章 计算机运算方法]]&quot;
<ul>
<li>&quot;与负数等价的正数代替负数&quot;</li>
<li>&quot;补的概念&quot;
<ul>
<li>&quot;利用时钟为例 mod&quot;
<ul>
<li>&quot;<strong>寄存器长度有限=mod</strong>&quot;</li>
</ul>
</li>
<li>&quot;补数&quot;</li>
<li>&quot;结论&quot;
<ul>
<li>&quot;一个负数加上模即得该负数的补数&quot;</li>
<li>&quot;一个正数和一个附属互为补数时 他们的绝对值之和即为模数&quot;</li>
<li>&quot;正数的补数是其本身&quot;</li>
</ul>
</li>
</ul>
</li>
<li>&quot;补码定义&quot;
<ul>
<li>&quot;用数表示符号-码&quot;</li>
<li>&quot;整数&quot;
<ul>
<li>&quot;<img src="https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2FSubjects%2Fa1Kf0AcRJf.png?alt=media&amp;token=237929d2-52a9-4dee-8f97-3b141564752a" alt="" loading="lazy">&quot;</li>
</ul>
</li>
<li>&quot;小数&quot;
<ul>
<li>&quot;<img src="https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2FSubjects%2FiNwMaB6fkO.png?alt=media&amp;token=538bcd3c-545d-4c65-a3ea-4c6af5359ac4" alt="" loading="lazy">&quot;</li>
</ul>
</li>
<li>&quot;求补码的快捷方式&quot;
<ul>
<li>&quot;按位取反 末尾加1 (用原码取反 )&quot;</li>
</ul>
</li>
<li>&quot;^<sup>**补码多表示一个数**</sup>^&quot;
<ul>
<li>&quot;-128&quot;</li>
<li>&quot;-1&quot;</li>
<li>&quot;不能按位取反&quot;</li>
</ul>
</li>
</ul>
</li>
<li>&quot;*反码&quot;</li>
<li>&quot;移码&quot;
<ul>
<li>&quot;补码很难判断其真值的大小&quot;</li>
<li>&quot;定义&quot;
<ul>
<li>&quot;<img src="https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2FSubjects%2FexokFrwFdN.png?alt=media&amp;token=d3ae590a-176c-4da8-9337-69871b8c3689" alt="" loading="lazy">&quot;</li>
</ul>
</li>
<li>&quot;与补码的比较&quot;
<ul>
<li>&quot;<strong>基本相同 只有最高符号位不同 数值位完全相同</strong>&quot;</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- more -->
<h3 id="数的定点表示和浮点表示">数的定点表示和浮点表示</h3>
<!-- more -->
<h3 id="定点运算">定点运算</h3>
<pre><code>- 移位的意义
    - 移数 因为是定点机
- 算数移位规则
    - 补码：^^左移添0 右移添1^^
    - 其他码制：直接补0
    - 硬件实现
- 加减法运算
    - 补码
        - 加法 补码相加取反
        - 减法
        - 连同符号为一起相加，符号位产生的进位（最高位）自然丢掉
- 溢出判断#[[判断溢出]]
    - 一位符号判别溢出
        - ⊕异或操作 异或=1溢出
        - 最高有效位仅为⊕符号位进位=1 溢出
    - 两位符号位判断溢出
        - 符号位之前加一位原始符号位 判断是否相同来判断溢出
        - ^^最高符号位代表真正的符号^^
- 补码加减法的硬件配置
- &quot;乘法运算&quot;
    - &quot;笔算乘法改进-递推公式-对于原码&quot;
        - &quot;初始状态&quot;
        - &quot;带乘数移位&quot;
        - &quot;移位n次，加n次&quot;
    - &quot;**补码乘法**&quot;
        - &quot;__目的：不需要管原来的真正的数是什么，只需要这个码来运行即可__&quot;
        - &quot;原始方法&quot;
            - &quot;被乘数任意，乘数为正&quot;
                - &quot;同原码乘&quot;
                - &quot;但加和移位按补码规则运算&quot;
                - &quot;运算乘积的符号自然形成&quot;
            - &quot;被乘数任意，乘数为负&quot;
                - &quot;乘数补 去掉符号位 操作同上&quot;
        - &quot;^^Booth算法^^&quot;
            - &quot;一位乘&quot;
            - &quot;两位乘&quot;
</code></pre>
<!-- more -->
<h3 id="浮点四则运算">浮点四则运算</h3>
<!-- more -->
<h3 id="算术逻辑单元">算术逻辑单元</h3>
<!-- more -->
<h2 id="指令系统7">指令系统（7）</h2>
<!-- more -->
<h3 id="机器指令">机器指令</h3>
<!-- more -->
<h3 id="操作数类型和操作类型">操作数类型和操作类型</h3>
<!-- more -->
<h3 id="寻址方式">寻址方式</h3>
<!-- more -->
<h3 id="指令格式举例">指令格式举例</h3>
<!-- more -->
<h3 id="risc详解">RISC详解</h3>
<!-- more -->
<h2 id="存储器">存储器</h2>
<!-- more -->
<h3 id="概述">概述</h3>
<!-- more -->
<h3 id="主存储器">主存储器</h3>
<!-- more -->
<h3 id="高速缓冲存储器cache">高速缓冲存储器Cache</h3>
<!-- more -->
<h3 id="辅助存储器">辅助存储器</h3>
]]></content>
    </entry>
</feed>